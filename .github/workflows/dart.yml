name: Dart

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: 🐦 Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable
          version: '3.32.0'

      - name: 🛠 Install dependencies
        run: flutter pub get

      - name: 👨‍🎨 Validate formatting
        run: dart format --set-exit-if-changed lib test

      - name: 🕵️‍♀️ Analyze project source
        run: flutter analyze . --fatal-infos

      - name: 🧪 Run tests
        run: flutter test --coverage

      - name: 🎯 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3

      - name: 🥇 Update coverage badge
        if: github.event_name != 'pull_request'
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.github_token }}

      - name: 📈 Check pana
        run: | 
          flutter pub global activate pana
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if (( $SCORE < $TOTAL )); then echo "minimum score not met!"; exit 1; fi
